SObjectizer is a framework for agent-oriented programming in C++. From one
side, SObjectizer is a set of rules and principles for designing programms in
agent-oriented style. On other side SObjectizer provides set of C++ classes for
implementing agents.

Obtaining and building
======================

SObjectizer can be downloaded from SourceForge[1] as an archive or
exported/checkedout from Subversion repository.

There are two ways for building SObjectizer. The first one by using Mxx_ru[2]
tool. The second one by using CMake[3]. Please note that CMake support is
experimental and is subject for changes in the future SObjectizer versions.

Building via Mxx_ru
===================

NOTE. This is a standard way for building SObjectizer. This way is used in
SObjectizer development process.

To build SObjectizer it is necessary to use Ruby language and Mxx_ru tool.
Install Ruby and then install Mxx_ru via RubyGems command:

  gem install Mxx_ru

SObjectizer can be obtained from Subversion repository on SourceForge:

  svn export http://svn.code.sf.net/p/sobjectizer/repo/tags/so_5/5.5.2 so-5.5.2

To build SObjectizer:

  cd so-5.5.2/dev
  ruby build.rb

Or to build SObjectizer with all tests and samples:

  cd so-5.5.2/dev
  ruby build_all.rb

Please note that under Linux it could be necessary to define LD_LIBRARY_PATH
environment variable. And the actual build command sequence under Linux could
be as follows:

  cd so-5.5.2/dev
  export LD_LIBRARY_PATH=.
  ruby build_all.rb

To build html-format documentation for SObjectizer the Doxygen tool is
necessary. If it is installed then:

  cd so-5.5.2/doxygen
  doxygen

Generated html-files will be located in so-5.5.2/dev/doc/html.

Building via CMake
==================

NOTE. This way of building is not used by SObjectizer developers. The projects
files for CMake are contributed by users.

To build SObjectizer via CMake it is necessary to have CMake and some knowledge
of how to use it. The following action is just a demonstration.

To get and build SObjectizer under Linux in command line run:

  svn export http://svn.code.sf.net/p/sobjectizer/repo/tags/so_5/5.5.2 so-5.5.2
  cd so-5.5.2
  mkdir cmake_build
  cd cmake_build
  cmake -DCMAKE_INSTALL_PREFIX=./ ../dev
  make
  make install

Those commands will create all necessary Makefile, then build SObjectizer 
(building and runing tests via CMake is not supported in v.5.5.2). If
it necessary to build examples too, use

  cmake -DBUILD_ALL=ON -DCMAKE_INSTALL_PREFIX=./ ../dev

When make install fineshed './bin' directory will contain samples executables
'./lib' will contain shared libso.5.x.x.so

CMake build system currently supports this options:

  BUILD_ALL      Enable building examples and tests [default: OFF]
  BUILD_EXAMPLES Enable building examples [default: OFF]
  BUILD_TESTS    Enable building tests    [default: OFF]

To build SObjectizer under Windows by MS Visual Studio 2013 from command line:

  cd so-5.5.2
  mkdir cmake_build
  cd cmake_build
  cmake -DCMAKE_INSTALL_PREFIX=./ -G "Visual Studio 12 2013" ../dev
  msbuild /t:Build /p:Configuration=Release Project.sln
  msbuild /t:Build /p:Configuration=Release INSTALL.vcxproj

If it necessary to build examples too, use BUILD_ALL in cmake invocation:

  cmake -DCMAKE_INSTALL_PREFIX=./ -DBUILD_ALL=ON -G "Visual Studio 12 2013" ../dev


License
=======

SObjectizer is distributed under 3-clause BSD license. For license information
please see LICENSE file.

References
==========

[1] https://sourceforge.net/projects/sobjectizer/files/sobjectizer/SObjectizer%20Core%20v.5.5/
[2] https://sourceforge.net/projects/mxxru/
[3] http://www.cmake.org/

